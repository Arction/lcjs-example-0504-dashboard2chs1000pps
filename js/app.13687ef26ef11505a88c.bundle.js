(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),r=a(613),{lightningChart:n,AxisScrollStrategies:o,emptyFill:i,Themes:l}=s,{createProgressiveFunctionGenerator:c}=r,d=2*Math.PI*10,S=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({theme:l[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfRows:1,numberOfColumns:2}),h=S.createChartXY({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:1}),m=S.createChartXY({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:1});h.setTitle("Vertical regressive"),h.getDefaultAxisY().setInterval({start:d,end:0,stopAxisAfter:!1}).setScrollStrategy(o.regressive);const p=h.addPointLineAreaSeries({dataPattern:"RegressiveY"}).setMaxSampleCount(1e4).setAreaFillStyle(i);m.setTitle("Vertical progressive");const u=m.addAxisY({opposite:!0}).setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-d,stopAxisAfter:!1}))).setScrollStrategy(o.progressive),g=m.addPointLineAreaSeries({dataPattern:"ProgressiveY",axisY:u}).setMaxSampleCount(1e4).setAreaFillStyle(i);m.getDefaultAxisY().dispose(),c().setSamplingFunction(Math.sin).setEnd(2*Math.PI).setStep(.015).generate().setStreamBatchSize(20).setStreamInterval(20).setStreamRepeat(!0).toStream().forEach((e=>{p.add({x:e.y,y:-e.x})})),c().setSamplingFunction((e=>Math.sin(.5*e)+Math.sin(e)+Math.cos(1.5*e)+Math.cos(.25*e))).setEnd(100*Math.PI).setStep(.015).generate().setStreamBatchSize(20).setStreamInterval(20).setStreamRepeat(!0).toStream().forEach((e=>{g.add({x:e.y,y:e.x})}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);